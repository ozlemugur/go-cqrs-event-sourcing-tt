// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/wallets/{id}/assets": {
            "get": {
                "description": "Get all assets for a specific wallet by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Retrieve all assets of a wallet",
                "operationId": "get-all-assets",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Wallet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.AssetResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/wallets/{id}/assets/{asset}": {
            "get": {
                "description": "Get the balance of a specific asset in a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Retrieve balance of a specific asset",
                "operationId": "get-asset-balance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Wallet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Asset Name",
                        "name": "asset",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.AssetBalanceResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/wallets/{id}/transactions": {
            "get": {
                "description": "Get the transaction history for a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Retrieve transaction history",
                "operationId": "get-transaction-history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Wallet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.TransactionHistoryResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Transaction amount",
                    "type": "number"
                },
                "asset_name": {
                    "type": "string"
                },
                "created_at": {
                    "description": "Timestamp when the transaction occurred",
                    "type": "string"
                },
                "id": {
                    "description": "Unique transaction ID",
                    "type": "integer"
                },
                "target_wallet_id": {
                    "description": "For transfer transactions",
                    "type": "integer"
                },
                "type": {
                    "description": "\"withdraw\", \"deposit\", or \"transfer\"",
                    "type": "string"
                },
                "wallet_id": {
                    "description": "Wallet associated with the transaction",
                    "type": "integer"
                }
            }
        },
        "entity.WalletAsset": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "The amount of the asset",
                    "type": "number"
                },
                "asset_name": {
                    "description": "The name of the asset (e.g., BTC, ETH)",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Timestamp of the last update",
                    "type": "string"
                },
                "wallet_id": {
                    "description": "The ID of the wallet",
                    "type": "integer"
                }
            }
        },
        "v1.AssetBalanceResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "asset_name": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "integer"
                }
            }
        },
        "v1.AssetResponse": {
            "type": "object",
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.WalletAsset"
                    }
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "v1.TransactionHistoryResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Transaction"
                    }
                }
            }
        },
        "v1.response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "detail"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8083",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Asset Query Service",
	Description:      "Asset Query Service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
