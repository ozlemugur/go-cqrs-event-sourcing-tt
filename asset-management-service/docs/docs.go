// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/assets/deposit": {
            "post": {
                "description": "Deposit funds into a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Deposit funds",
                "operationId": "deposit",
                "parameters": [
                    {
                        "description": "Deposit request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.assetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.assetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.assetResponse"
                        }
                    }
                }
            }
        },
        "/assets/transfer": {
            "post": {
                "description": "Transfer funds between wallets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Transfer funds",
                "operationId": "transfer",
                "parameters": [
                    {
                        "description": "Transfer request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.assetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.assetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.assetResponse"
                        }
                    }
                }
            }
        },
        "/assets/withdraw": {
            "post": {
                "description": "Withdraw funds from a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Withdraw funds",
                "operationId": "withdraw",
                "parameters": [
                    {
                        "description": "Withdraw request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.assetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.assetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.assetResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.TransactionRequest": {
            "type": "object",
            "required": [
                "amount",
                "asset_name",
                "wallet_id"
            ],
            "properties": {
                "amount": {
                    "description": "Transaction amount",
                    "type": "number"
                },
                "asset_name": {
                    "description": "Asset being transacted (e.g., BTC, ETH)",
                    "type": "string"
                },
                "wallet_id": {
                    "description": "Wallet performing the transaction",
                    "type": "integer"
                }
            }
        },
        "entity.TransferRequest": {
            "type": "object",
            "required": [
                "amount",
                "asset_name",
                "execute_time",
                "from_wallet_id",
                "to_wallet_id"
            ],
            "properties": {
                "amount": {
                    "description": "Transfer amount",
                    "type": "number"
                },
                "asset_name": {
                    "description": "Asset being transferred",
                    "type": "string"
                },
                "execute_time": {
                    "description": "time (Unix) When this should be executed",
                    "type": "integer"
                },
                "from_wallet_id": {
                    "description": "Sender wallet",
                    "type": "integer"
                },
                "to_wallet_id": {
                    "description": "Receiver wallet",
                    "type": "integer"
                }
            }
        },
        "v1.assetResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8082",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Asset Management Service",
	Description:      "Asset Management Service (Command API - Writes to Kafka)",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
